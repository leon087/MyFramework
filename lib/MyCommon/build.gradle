tasks.withType(JavaCompile) { options.encoding = "UTF-8" }

apply plugin: 'com.android.library'
//apply from: '../../ext-android.gradle'
apply from: "$rootDir/ext-android.gradle"

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':lib:MyUtil')

    compile 'com.jakewharton:disklrucache:2.0.2'
//    compile 'com.mcxiaoke.volley:library:1.0.17'
//    compile 'com.loopj.android:android-async-http:1.4.9'
//    compile 'cz.msebera.android:httpclient:4.3.6'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.4'

    compile 'com.squareup.okhttp3:okhttp:3.0.1'
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    def task = project.tasks.create "jar${name.capitalize()}", Jar
    task.dependsOn variant.javaCompile
    task.from variant.javaCompile.destinationDir
    artifacts.add('archives', task);
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
}

apply plugin: 'maven'
uploadArchives {
    repositories.mavenDeployer {
        repository(url: RELEASE_REPOSITORY_URL) {
            authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
        }
//        snapshotRepository(url: "http://xxx.xxx.xxx.xx:8080/content/repositories/snapshots") {
//            authentication(userName: "xxxx", password: "xxxx")
//        }
        pom.version = versionName + "." + versionCode
        pom.artifactId = POM_ARTIFACT_ID
        pom.groupId = GROUP
        pom.name = POM_NAME
        pom.packaging = POM_PACKAGING
    }
}