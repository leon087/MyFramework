buildscript {
    repositories {
        jcenter()
        maven {
            url RELEASE_REPOSITORY_URL
            credentials {
                username NEXUS_USERNAME
                password NEXUS_PASSWORD
            }
        }
        maven { url uri(new File(rootDir, 'local_repo')) }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'
//        classpath 'ggg.android:cm.android.gradle:1.0.19'
        classpath 'ggg.android:cm.android.gradle:local'
    }
}
//----------------------
import cm.android.gradle.util.Util;

def computeVersion() {
    return Util.computeVersion(project.versionName, project.versionCode, Util.getSvnRevision(rootProject.getRootDir()));
}

if (plugins.hasPlugin('com.android.application') || plugins.hasPlugin('com.android.library')) {
    android {
        compileSdkVersion Integer.parseInt(project.compileSdkVersion)
        buildToolsVersion project.buildToolsVersion

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }

        defaultConfig {
            minSdkVersion Integer.parseInt(project.minSdkVersion)
            targetSdkVersion Integer.parseInt(project.targetSdkVersion)
            versionCode Integer.parseInt(project.versionCode)
            versionName computeVersion()
        }
    }

    android {
        aaptOptions {
//            noCompress 'foo', 'bar'
            ignoreAssetsPattern "!.svn:!.git:!.ds_store:!*.scc:.*:<dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"
        }

//        packagingOptions {
////        pickFirst 'META-INF/foo.txt'
//
//            exclude 'META-INF/DEPENDENCIES.txt'
//            exclude 'META-INF/LICENSE.txt'
//            exclude 'META-INF/NOTICE.txt'
//            exclude 'LICENSE.txt'
//            exclude 'META-INF/LICENSE'
//            exclude 'META-INF/license.txt'
//            exclude 'META-INF/NOTICE'
//            exclude 'META-INF/notice.txt'
//            exclude 'META-INF/ASL2.0'
//            exclude 'META-INF/RELEASE_NOTES.txt'
//        }

        packagingOptions.excludes = [
                '**/LICENSE.txt',
                '**/license.txt',
                '**/DEPENDENCIES.txt',
                '**/NOTICE.txt',
                '**/NOTICE',
                '**/notice.txt',
                '**/ASL2.0',
                '**/RELEASE_NOTES.txt',

                'LICENSE',
                'LICENSE.txt',
                'META-INF/LICENSE',
                'META-INF/LICENSE.txt',
                'META-INF/NOTICE',
                'META-INF/NOTICE.txt',
        ]

        lintOptions {
            abortOnError false
            quiet false
            showAll true
        }

        dexOptions {
            preDexLibraries = false
            incremental true
            javaMaxHeapSize "2g"
        }
    }
}
